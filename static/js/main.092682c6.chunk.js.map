{"version":3,"sources":["components/taskTrecker/TaskTrecker.module.css","components/taskTrecker/info/Info.module.css","components/taskTrecker/buttons/Buttons.module.css","components/taskTrecker/notification/Notification.module.css","components/taskTrecker/buttons/Buttons.js","components/taskTrecker/info/Info.js","components/taskTrecker/notification/Notification.js","components/taskTrecker/TaskTrecker.js","components/App.js","index.js"],"names":["module","exports","Buttons","onHandleClick","className","s","good","type","onClick","data-name","neutral","bad","Info","total","percentage","info","Notification","message","notification","TaskTrecker","state","e","key","target","dataset","name","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","this","container","feedback","title","feedbackk","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,UAAY,+BAA+B,MAAQ,2BAA2B,SAAW,8BAA8B,UAAY,iC,gBCArJD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,IAAM,qBAAqB,QAAU,2B,qBCApFD,EAAOC,QAAU,CAAC,aAAe,qC,qLCsClBC,EAnCC,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACjB,OACE,qCAEE,wBACEC,UAAWC,IAAEC,KACbC,KAAK,SACLC,QAASL,EACTM,YAAU,OAJZ,kBAQA,wBACEL,UAAWC,IAAEK,QACbH,KAAK,SACLC,QAASL,EACTM,YAAU,UAJZ,qBAQA,wBACEL,UAAWC,IAAEM,IACbJ,KAAK,SACLC,QAASL,EACTM,YAAU,MAJZ,qB,gBCDSG,EAnBF,SAAC,GAA+C,IAA7CN,EAA4C,EAA5CA,KAAMI,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,IAAKE,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACzC,OACE,qCACE,oBAAGV,UAAWC,IAAEU,KAAhB,mBAA6BT,KAC7B,oBAAGF,UAAWC,IAAEU,KAAhB,sBAAgCL,KAChC,oBAAGN,UAAWC,IAAEU,KAAhB,kBAA4BJ,KAC5B,oBAAGP,UAAWC,IAAEU,KAAhB,mBAA6BF,EAA7B,OACA,oBAAGT,UAAWC,IAAEU,KAAhB,+BAAyCD,EAAzC,Y,iBCRS,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,qBAAKb,UAAWC,IAAEa,aAAlB,SAAiCD,I,ICuD3BE,E,4MApDbC,MAAQ,CACNd,KAAM,EACNI,QAAS,EACTC,IAAK,G,EAGPR,cAAgB,SAACkB,GACf,IAAMC,EAAMD,EAAEE,OAAOC,QAAQC,KAC7B,EAAKC,UAAS,SAACC,GAAD,sBAAcL,EAAMK,EAAKL,GAAO,O,EAEhDM,mBAAqB,WAAO,IAAD,EACM,EAAKR,MACpC,OAFyB,EACjBd,KADiB,EACXI,QADW,EACFC,K,EAGzBkB,gCAAkC,SAAChB,EAAOP,GAExC,OADiBA,EAAOO,EAAS,KAClBiB,W,uDAGf,IAAMjB,EAAQkB,KAAKH,qBACbd,EAAaiB,KAAKF,gCACtBhB,EACAkB,KAAKX,MAAMd,MAJN,EAOwByB,KAAKX,MAA5Bd,EAPD,EAOCA,KAAMI,EAPP,EAOOA,QAASC,EAPhB,EAOgBA,IACvB,OACE,sBAAKP,UAAWC,IAAE2B,UAAlB,UACE,sBAAK5B,UAAWC,IAAE4B,SAAlB,UACE,oBAAI7B,UAAWC,IAAE6B,MAAjB,mCAEA,cAAC,EAAD,CAAQ/B,cAAe4B,KAAK5B,gBAC5B,oBAAIC,UAAWC,IAAE6B,MAAjB,4BAEF,qBAAK9B,UAAWC,IAAE8B,UAAlB,SACGtB,EAAQ,EACP,cAAC,EAAD,CACEP,KAAMA,EACNI,QAASA,EACTC,IAAKA,EACLE,MAAOA,EACPC,WAAYA,IAGd,cAACE,EAAD,CAAcC,QAAQ,+B,GA7CRmB,aCKXC,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.092682c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TaskTrecker_container__SNvZC\",\"title\":\"TaskTrecker_title__1UpZe\",\"feedback\":\"TaskTrecker_feedback__iiABz\",\"feedbackk\":\"TaskTrecker_feedbackk__1Gjkg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"Info_info__1LySb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"Buttons_good__2ohqv\",\"bad\":\"Buttons_bad__1Uavc\",\"neutral\":\"Buttons_neutral__2of1n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1cIzJ\"};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Buttons.module.css\";\r\n\r\nconst Buttons = ({ onHandleClick }) => {\r\n  return (\r\n    <>\r\n      {/* <div className={s.button}> */}\r\n      <button\r\n        className={s.good}\r\n        type=\"button\"\r\n        onClick={onHandleClick}\r\n        data-name=\"good\"\r\n      >\r\n        Good\r\n      </button>\r\n      <button\r\n        className={s.neutral}\r\n        type=\"button\"\r\n        onClick={onHandleClick}\r\n        data-name=\"neutral\"\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={s.bad}\r\n        type=\"button\"\r\n        onClick={onHandleClick}\r\n        data-name=\"bad\"\r\n      >\r\n        Bad\r\n      </button>\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\nButtons.propTypes = {\r\n  onHandleClick: PropTypes.func.isRequired,\r\n};\r\nexport default Buttons;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Info.module.css\";\r\n\r\nconst Info = ({ good, neutral, bad, total, percentage }) => {\r\n  return (\r\n    <>\r\n      <p className={s.info}>Good: {good}</p>\r\n      <p className={s.info}>Neutral: {neutral}</p>\r\n      <p className={s.info}>Bad: {bad}</p>\r\n      <p className={s.info}>Total:{total} </p>\r\n      <p className={s.info}>Positive Feedback:{percentage}% </p>\r\n    </>\r\n  );\r\n};\r\n\r\nInfo.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  percentage: PropTypes.string,\r\n};\r\nexport default Info;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\nexport default function Notification({ message }) {\r\n  return <div className={s.notification}>{message}</div>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport s from \"../taskTrecker/TaskTrecker.module.css\";\r\nimport Button from \"./buttons/Buttons\";\r\nimport Info from \"./info/Info\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nclass TaskTrecker extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  onHandleClick = (e) => {\r\n    const key = e.target.dataset.name;\r\n    this.setState((prev) => ({ [key]: prev[key] + 1 }));\r\n  };\r\n  countTotalFeedback = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n  countPositiveFeedbackPercentage = (total, good) => {\r\n    const percent = (good / total) * 100;\r\n    return percent.toFixed();\r\n  };\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const percentage = this.countPositiveFeedbackPercentage(\r\n      total,\r\n      this.state.good\r\n    );\r\n\r\n    const { good, neutral, bad } = this.state;\r\n    return (\r\n      <div className={s.container}>\r\n        <div className={s.feedback}>\r\n          <h2 className={s.title}>Please leave feedback</h2>\r\n\r\n          <Button onHandleClick={this.onHandleClick} />\r\n          <h3 className={s.title}>Statistics:</h3>\r\n        </div>\r\n        <div className={s.feedbackk}>\r\n          {total > 0 ? (\r\n            <Info\r\n              good={good}\r\n              neutral={neutral}\r\n              bad={bad}\r\n              total={total}\r\n              percentage={percentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskTrecker;\r\n","import React from \"react\";\nimport TaskTrecker from \"./taskTrecker/TaskTrecker\";\n\nfunction App() {\n  return (\n    <>\n      <TaskTrecker />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n// import TaskTrecker from \"./components/taskTrecker/TaskTrecker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}